<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%- pageTitle %></title>


  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
  <!-- jQuery CDN -->
  <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
</head>

<body>


  <div class="container m-2 p-2 d-flex flex-column justify-content-start">
    <h3><%- pageTitle %></h3>

  

    <div class="container">
      <a href="/admin/products/create" class="btn btn-dark mb-2">Create New Product</a>
    </div>

    <!-- Search Form -->
    <form class="m-2 d-flex align-items-center gap-3 w-50 " id="search-form">
      <input class="form-control mb-2 " type="text" name="search" placeholder="Search" />
      <button class="btn btn-dark mb-2" type="submit ">Search</button>
    </form>
    <!-- Filter Form -->
    <form  class="m-2 d-flex align-items-center gap-3 w-50 " id="filter-form">
      <input class="form-control mb-2 w-50" type="text" name="category" placeholder="Category" />
      <input class="form-control mb-2 w-50"type="number" name="minPrice" placeholder="Min Price" />
      <input class="form-control mb-2 w-50"type="number" name="maxPrice" placeholder="Max Price" />
      <button class = " btn btn-dark mb-2" type="submit">Filter</button>
    </form>

    <!-- Sort Form -->
    <form  class="m-2 d-flex align-items-center gap-3 w-50 " id="sort-form">
      <select class="form-select mb-2 w-50" name="sortBy">
        <option value="title">Title</option>
        <option value="price">Price</option>
      </select>
      <select class="form-select mb-2 w-50" name="sortOrder">
        <option value="asc">Ascending</option>
        <option value="desc">Descending</option>
      </select>
      <button class="btn btn-dark mb-2"type="submit">Sort</button>
    </form>
  </div>

  <table class ="table" id="product-table">
    <thead>
      <tr>
        <th>ID</th>
        <th>Title</th>
        <th>Price</th>
        <th>Category</th>
        <th>Description</th>
        <th>Image</th>
        <th>Actions</th>
      </tr>
    </thead>
    <tbody>
    </tbody>
  </table>
  <div id="pagination"></div>
  
  <!-- Your custom JavaScript file -->
  <script>
    $(document).ready(function()
{
    fetchProducts();
})
let queryParams = {
    search: "",
    category: "",
    minPrice: "",
    maxPrice: "",
    sortBy: "",
    sortOrder: "",
    page: 1,
  };
  // Search Form Submission
$("#search-form").on("submit", function (e) {
    e.preventDefault();
    queryParams.search = $(this).find("[name='search']").val();
    queryParams.page = 1; // Reset to the first page on new search
    fetchProducts();
  });
  
  // Filter Form Submission
  $("#filter-form").on("submit", function (e) {
    e.preventDefault();
    queryParams.category = $(this).find("[name='category']").val();
    queryParams.minPrice = $(this).find("[name='minPrice']").val();
    queryParams.maxPrice = $(this).find("[name='maxPrice']").val();
    queryParams.page = 1; // Reset to the first page on new filter
    fetchProducts();
  });
  
  // Sort Form Submission
  $("#sort-form").on("submit", function (e) {
    e.preventDefault();
    queryParams.sortBy = $(this).find("[name='sortBy']").val();
    queryParams.sortOrder = $(this).find("[name='sortOrder']").val();
    queryParams.page = 1; // Reset to the first page on new sort
    fetchProducts();
  });
  function fetchProducts() {
    console.log("method has been called");
    $.ajax({
      url: "/admin/api/products",
      method: "GET",
      data: queryParams, // Send queryParams as the request data
      success: function (data) {
        renderProducts(data);
      },
      error: function (error) {
        console.error("Error fetching products:", error);
      },
    });

  }
  function renderProducts({ products, totalRecords, totalPages, page }) {
  queryParams.page = page; // Update the current page
  const tableBody = $("#product-table tbody");
  tableBody.empty();

  products.forEach((product) => {
    console.log(product);
    let imageHtml = "";
    if (product.image) {
      // Display the product image
      imageHtml = `<img src="${product.image}" alt="${product.title}" style="width: 100px; height: auto;">`;
    } else {
      imageHtml = "No image available";
    }

    tableBody.append(`
      <tr>
        <td>${product._id}</td>
        <td>${product.title}</td>
        <td>${product.price}</td>
        <td>${product.category ? product.category.name : "No category"}</td>
        <td>${product.description}</td>
        <td>${imageHtml}</td> <!-- Add image column -->
        <td>
          <a href="/admin/products/edit/${product._id}" class="btn btn-warning">Edit</a>
          <a href="/admin/products/delete/${product._id}" class="btn btn-danger">Delete</a>
        </td>
      </tr>
    `);
  });
  renderPagination(totalPages, page);
}
  
  function renderPagination(totalPages, currentPage) {
  const paginationDiv = $("#pagination");
  paginationDiv.empty();

  const query = $.param({
    search: queryParams.search,
    category: queryParams.category,
    minPrice: queryParams.minPrice,
    maxPrice: queryParams.maxPrice,
    sortBy: queryParams.sortBy,
    sortOrder: queryParams.sortOrder,
    category: queryParams.category
  });

  const prevDisabled = currentPage === 1 ? "disabled" : "";
  const nextDisabled = currentPage === totalPages ? "disabled" : "";

  let paginationHtml = `<ul class="pagination justify-content-center">`;

  // Previous button
  paginationHtml += `
    <li class="page-item ${prevDisabled}">
      <a href="#" class="page-link" data-page="${currentPage - 1}">
        <span aria-hidden="true">&laquo;</span>
      </a>
    </li>`;

  // Page numbers
  for (let i = 1; i <= totalPages; i++) {
    const activeClass = i === currentPage ? "active" : "";
    paginationHtml += `
      <li class="page-item ${activeClass}">
        <a href="#" class="page-link" data-page="${i}">${i}</a>
      </li>`;
  }

  // Next button
  paginationHtml += `
    <li class="page-item ${nextDisabled}">
      <a href="#" class="page-link" data-page="${currentPage + 1}">
        <span aria-hidden="true">&raquo;</span>
      </a>
    </li>`;

  paginationHtml += `</ul>`;

  paginationDiv.html(paginationHtml);
}

  // Pagination Click Handler
  $("#pagination").on("click", ".page-link", function (e) {
    e.preventDefault();
    queryParams.page = $(this).data("page");
    fetchProducts();
  });
  </script>
</body>
