<!DOCTYPE html>
<html lang="en" data-bs-theme="dark">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Product Catalogue</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <style>
    body {
      background-color: #121212;
      color: #ffffff;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    .navbar {
      background-color: #1e1e1e;
      box-shadow: 0 2px 4px rgba(0,0,0,.1);
    }
    .card {
      background-color: #1e1e1e;
      border: none;
      border-radius: 15px;
      transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
    }
    .card:hover {
      transform: translateY(-5px);
      box-shadow: 0 10px 20px rgba(0,0,0,0.2);
    }
    .card img {
      border-radius: 15px 15px 0 0;
      object-fit:contain;
      height: 200px;
      width: 100%;
    }
    .card-body {
      display: flex;
      flex-direction: column;
      height: 100%;
    }
    .form-control, .form-select, .btn {
      background-color: #2a2a2a;
      color: #ffffff;
      border: 1px solid #444;
      border-radius: 10px;
    }
    .form-control::placeholder, .form-select {
      color: #b3b3b3;
    }
    .btn-primary {
      background-color: #007bff;
      border-color: #007bff;
    }
    .btn-primary:hover {
      background-color: #0056b3;
      border-color: #0056b3;
    }
    .input-group .form-control {
      border-radius: 10px 0 0 10px;
    }
    .input-group .btn {
      border-radius: 0 10px 10px 0;
    }
    .filters {
      background-color: #1e1e1e;
      border-radius: 15px;
      padding: 20px;
      margin-bottom: 30px;
    }
    .product-title {
      font-size: 1.1rem;
      font-weight: bold;
      margin-bottom: 0.5rem;
    }
    .product-price {
      font-size: 1.2rem;
      color: #28a745;
      font-weight: bold;
    }
    .product-category {
      font-size: 0.9rem;
      color: #6c757d;
    }
  </style>
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark mb-4">
    <div class="container">
      <a class="navbar-brand" href="/">
        <i class="fas fa-store me-2"></i>Product Catalogue
      </a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav ms-auto">
          <li class="nav-item">
            <a class="nav-link" href="/"><i class="fas fa-home me-1"></i>Home</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/cart"><i class="fas fa-shopping-cart me-1"></i>Cart</a>
          </li>
        </ul>
      </div>
    </div>
  </nav>

  <div class="container">
    <div class="filters">
      <form id="search-form" class="mb-3">
        <div class="input-group">
          <input class="form-control" type="text" name="search" placeholder="Search products...">
          <button class="btn btn-primary" type="submit"><i class="fas fa-search"></i></button>
        </div>
      </form>
      
      <div class="row">
        <div class="col-md-6 mb-3">
          <form id="filter-form">
            <div class="mb-2">
              <select class="form-select" name="category" id="category-select">
                <option value="">All Categories</option>
              </select>
            </div>
            <div class="row">
              <div class="col-6">
                <input class="form-control" type="number" name="minPrice" placeholder="Min Price" />
              </div>
              <div class="col-6">
                <input class="form-control" type="number" name="maxPrice" placeholder="Max Price" />
              </div>
            </div>
            <button class="btn btn-primary w-100 mt-2" type="submit">Apply Filters</button>
          </form>
        </div>
        <div class="col-md-6 mb-3">
          <form id="sort-form">
            <div class="mb-2">
              <select class="form-select" name="sortBy">
                <option value="title">Sort by Title</option>
                <option value="price">Sort by Price</option>
              </select>
            </div>
            <div class="mb-2">
              <select class="form-select" name="sortOrder">
                <option value="asc">Ascending</option>
                <option value="desc">Descending</option>
              </select>
            </div>
            <button class="btn btn-primary w-100" type="submit">Apply Sorting</button>
          </form>
        </div>
      </div>
    </div>

    <div id="product-list" class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
      <!-- Product cards will be dynamically inserted here -->
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    $(document).ready(function () {
      let queryParams = {};

      async function fetchCategories() {
        try {
          const response = await fetch('/shop/api/categories');
          const categories = await response.json();
          const categorySelect = $('#category-select');

          categories.forEach(category => {
            const option = new Option(category.name, category._id);
            categorySelect.append(option);
          });
        } catch (error) {
          console.error('Error fetching categories:', error);
        }
      }

      async function fetchProducts() {
        try {
          const response = await fetch('/admin/api/products?' + $.param(queryParams));
          const data = await response.json();
          renderProducts(data);
        } catch (error) {
          console.error('Error fetching products:', error);
        }
      }

      function renderProducts(data) {
        const productList = $("#product-list");
        productList.empty();

        if (data.products && data.products.length > 0) {
          data.products.forEach(product => {
            const productCard = `
              <div class="col">
                <div class="card h-100">
                  <img src="${product.image ? product.image : 'https://via.placeholder.com/300x200'}" class="card-img-top" alt="${product.title}">
                  <div class="card-body d-flex flex-column">
                    <h5 class="product-title">${product.title}</h5>
                    <p class="card-text flex-grow-1">${product.description}</p>
                    <p class="product-price mb-1">${product.price.toFixed(2)}</p>
                    <p class="product-category mb-2">${product.category ? product.category.name : 'No category'}</p>
                    <div class="input-group">
                      <input type="number" class="form-control quantity-input" placeholder="Qty" value="1" min="1" data-id="${product._id}">
                      <button class="btn btn-primary add-to-cart" data-id="${product._id}">
                        <i class="fas fa-cart-plus me-1"></i>Add
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            `;
            productList.append(productCard);
          });
        } else {
          productList.append('<p class="text-center">No products found</p>');
        }
      }

      $(document).on("click", ".add-to-cart", function () {
        const productId = $(this).data("id");
        const quantity = $(this).siblings(".quantity-input").val();
        addToCart(productId, quantity);
      });

      $("#filter-form").on("submit", function (e) {
        e.preventDefault();
        queryParams.category = $(this).find("[name='category']").val();
        queryParams.minPrice = $(this).find("[name='minPrice']").val();
        queryParams.maxPrice = $(this).find("[name='maxPrice']").val();
        queryParams.page = 1;
        fetchProducts();
      });

      $("#search-form").on("submit", function (e) {
        e.preventDefault();
        queryParams.search = $(this).find("[name='search']").val();
        queryParams.page = 1;
        fetchProducts();
      });

      $("#sort-form").on("submit", function (e) {
        e.preventDefault();
        queryParams.sortBy = $(this).find("[name='sortBy']").val();
        queryParams.sortOrder = $(this).find("[name='sortOrder']").val();
        queryParams.page = 1;
        fetchProducts();
      });

      async function addToCart(productId, quantity) {
        try {
          const response = await fetch('/cart/add', { 
            method: 'POST',
            headers: { 
              'Content-Type': 'application/json' 
            },
            body: JSON.stringify({ productId, quantity })
          });

          const result = await response.json();
          if (response.ok) {
            alert('Product added to cart successfully!');
          } else {
            alert(`Error: ${result.message}`);
          }
        } catch (error) {
          console.error('Error adding to cart:', error);
        }
      }

      fetchCategories();
      fetchProducts();
    });
  </script>
</body>
</html>

